components:
  schemas:
    Dataflow:
      type: object
      properties:
        host_management:
          type: array
          items:
            $ref: './host_management.yaml#/components/schemas/Dataflow.HostManagement'
        workload:
          description: |-
            The workload items making up the dataflow
          type: array
          items:
            $ref: "#/components/schemas/Dataflow.WorkloadItem"
        flow_profiles: 
          description: |-
            foo
          type: array
          items:
            $ref: "#/components/schemas/Dataflow.FlowProfile"
        eth_nic_profiles:
          description: |-
              A list of eth nic settings profiles 
          type: array
          items:
            $ref: "#/components/schemas/Dataflow.EthNicSetting"

    Dataflow.EthNicSetting:
      type: object
      required: [name]
      properties:
        name:
          description: Uniquely identifies an eth_nic profile
          type: string
        nic_rx_buffer:
          type: integer
          description: RX buffer size in bytes
        nic_tx_buffer:
          type: integer
          description: TX buffer size in bytes
        nic_speed:
          type: integer
          description: configured link speed Mbps (e.g. 100000 for 100G)
        management_address:
          type: string
          description: Hostname or address of management interface of a server running dataflow traffic
        nic_name:
          type: string
          description: unique idenfier for the network interface card (nic), e.g. "eth1"
        flow_control_autoneg: 
          type: boolean
          description: Value for the autonegotiate pause parameter
        flow_control_rx: 
          type: boolean
          description: Value for the RX pause parameter
        flow_control_tx: 
          type: boolean
          description: Value for the TX pause parameter
        coalesce_adaptive_rx: 
          type: boolean
          description: An algorithm to improve rx latency at low packet-receiving rates and improve throughput at high packet-receiving rates. Some NIC drivers do not support this feature.
        coalesce_adaptive_tx: 
          type: boolean
          description: An algorithm to improve tx latency at low packet-sending rates and improve throughput at high packet-sending rates. Some NIC drivers do not support this feature.
        coalesce_tx_frames: 
          type: integer
          description: Number of packets to delay a TX interrupt after sending a packet. If 0, only tx-usecs is used. Do not set both tx-usecs and tx-max-frames to zero as this would cause TX interrupts to never be generated.
        coalesce_rx_frames: 
          type: integer
          description: Number of packets to delay an RX interrupt after packet arrival. If 0, only rx-usecs is used. Do not set both rx-usecs and rx-max-frames to zero as this would cause RX interrupts to never be generated.
        coalesce_tx_usecs: 
          type: integer
          description: Number of microseconds to delay a TX interrupt after a sending a packet. If 0, only tx-max-frames is used. Do not set both tx-usecs and tx-max-frames to zero as this would cause TX interrupts to never be generated.
        coalesce_rx_usecs: 
          type: integer
          description: Number of microseconds to delay an RX interrupt after packet arrival. If 0, only rx-max-frames is used. Do not set both rx-usecs and rx-max-frames to zero as this would cause RX interrupts to never be generated.
        offload_rx_checksum: 
          type: boolean
          description: Specifies whether RX checksumming should be enabled.
        offload_tx_checksum: 
          type: boolean
          description: Specifies whether TX checksumming should be enabled.
        offload_sg: 
          type: boolean
          description: Specifies whether scatter-gather should be enabled.
        offload_tso: 
          type: boolean
          description: Specifies whether TCP segmentation offload should be enabled.
        offload_gso: 
          type: boolean
          description: Specifies whether generic segmentation offload should be enabled
        offload_gro: 
          type: boolean
          description: Specifies whether generic receive offload should be enabled
        offload_lro: 
          type: boolean
          description: Specifies whether large receive offload should be enabled
        offload_tx_nocache_copy: 
          type: boolean
          description: Helps to reduce CPU cycles by bypassing the local cache and writing user-space data directly into memory.
        offload_tx_udp_segmentation: 
          type: boolean
          description: Specifies whether UDP TX segmentation offload should be enabled.
        tx_queue_len: 
          type: integer
          description: Sets the TX queue size

    Dataflow.FlowProfile:
      type: object
      required: [name, data_size]
      properties:
        name:
          type: string
        data_size:
          type: integer

        l2_protocol_choice:
          description: layer2 protocol selection
          type: string
          enum: [ethernet]
        ethernet:
          $ref: "#/components/schemas/Dataflow.FlowProfile.Ethernet"
        l4_protocol_choice:
          description: layer4 protocol selection
          type: string
          enum: [tcp, udp]
        ip:
          $ref: "#/components/schemas/Dataflow.FlowProfile.Ip"
        tcp:
          $ref: "#/components/schemas/Dataflow.FlowProfile.Tcp"
        udp:
          $ref: "#/components/schemas/Dataflow.FlowProfile.Udp"

    Dataflow.FlowProfile.Ethernet:
      type: object
      properties:
        mtu:
          type: integer
          description: Maximum Transmission Unit
          default: 1500

    Dataflow.FlowProfile.Ip:
      type: object
      properties:
        dscp:
          type: integer
          description: differentiated services code point

    Dataflow.FlowProfile.Tcp:
      type: object
      properties:
        congestion_algorithm:
          # type: integer
          x-include:
            - "#/components/schemas/TcpCongestionAlgorithm"
          default: cubic
        initcwnd:
          description: initial congestion window
          type: integer
        send_buf:
          description: send buffer size
          type: integer
        receive_buf:
          description: receive buffer size
          type: integer
        delayed_ack:
          description: delayed acknowledgment
          type: integer
        selective_ack:
          description: selective acknowledgment
          type: boolean
        min_rto:
          description: minimum retransmission timeout
          type: integer
        mss:
          type: integer
          description: Maximum Segment Size
          default: 1500
        ecn:
          description: early congestion notification
          type: boolean
        enable_timestamp:
          description: enable tcp timestamping
          type: boolean
        destination_port:
          $ref: "#/components/schemas/L4PortRange"
        source_port:
          $ref: "#/components/schemas/L4PortRange"
          
    TcpCongestionAlgorithm:
      description: |-
        The TCP congestion algorithm:
        bbr - Bottleneck Bandwidth and Round-trip propagation time
        dctcp - Data center TCP
        cubic - cubic window increase function
        reno - TCP New Reno
      type: string
      enum: [bbr, dctcp, cubic, reno]

    L4PortRange:
      description: Layer4 protocol source or destination port values
      type: object
      properties:
        choice:
          description: 
          type: string
          enum: [single_value, range]
        single_value:
          $ref: "#/components/schemas/L4PortRange.SingleValue"
        range:
          $ref: "#/components/schemas/L4PortRange.Range"

    L4PortRange.SingleValue:
      type: object
      properties:
        value: 
          type: integer
          default: 1
    L4PortRange.Range:
      type: object
      properties:
        start_value:
          type: integer
          default: 1
        increment:
          type: integer
          default: 1
          minimum: 1

    Dataflow.FlowProfile.Udp:
      type: object

    Dataflow.WorkloadItem:
      type: object
      required: [name, choice]
      properties:
        name:
          description: |-
            uniquely identifies the workload item
          type: string
        choice:
          description: |-
            The type of workflow item
          type: string
          enum: [scatter, gather, all_reduce, loop, compute, broadcast, all_to_all]
        scatter:
          $ref: "#/components/schemas/Dataflow.ScatterWorkload"
        gather:
          $ref: "#/components/schemas/Dataflow.GatherWorkload"
        loop:
          $ref: "#/components/schemas/Dataflow.LoopWorkload"
        compute:
          $ref: "#/components/schemas/Dataflow.ComputeWorkload"
        all_reduce:
          $ref: "#/components/schemas/Dataflow.AllReduceWorkload"
        broadcast:
          $ref: "#/components/schemas/Dataflow.BroadcastWorkload"
        all_to_all:
          $ref: "#/components/schemas/Dataflow.AlltoallWorkload"

    Dataflow.ScatterWorkload:
      type: object
      properties:
        sources:
          description: |-
            list of host names, indicating the originator of the data
          type: array
          items:
            type: string
        destinations:
          description: |-
            list of host names, indicating the destination of the data
          type: array
          items:
            type: string
        flow_profile_name:
          description: |-
            flow profile reference
          type: string

    Dataflow.BroadcastWorkload:
      type: object
      properties:
        sources:
          description: |-
            list of host names, indicating the originator of the data
          type: array
          items:
            type: string
        destinations:
          description: |-
            list of host names, indicating the destination of the data
          type: array
          items:
            type: string
        flow_profile_name:
          description: |-
            flow profile reference
          type: string

    Dataflow.GatherWorkload:
      type: object
      properties:
        sources:
          description: |-
            list of host names, indicating the originator of the data
          type: array
          items:
            type: string
        destinations:
          description: |-
            list of host names, indicating the destination of the data
          type: array
          items:
            type: string
        flow_profile_name:
          description: |-
            flow profile reference
          type: string

    Dataflow.AllReduceWorkload:
      type: object
      properties:
        nodes:
          type: array
          items:
            type: string
        flow_profile_name:
          description: |-
            flow profile reference
          type: string
        type:
          description: |-
            type of all reduce
          type: string
          enum: [ring, tree, butterfly]
          default: ring

    Dataflow.AlltoallWorkload:
      type: object
      description: creates full-mesh flows between all nodes
      properties:
        nodes:
          type: array
          items:
            type: string
        flow_profile_name:
          description: |-
            flow profile reference
          type: string

    Dataflow.ComputeWorkload:
      type: object
      properties:
        nodes:
          type: array
          items:
            type: string
        choice:
          description: |-
            type of compute
          type: string
          enum: [simulated]
        simulated:
          $ref: "#/components/schemas/Dataflow.SimulatedComputeWorkload"
    
    Dataflow.SimulatedComputeWorkload:
      type: object
      properties:
        duration:
          description: |-
            duration of the simulated compute workload in seconds
          type: number

    Dataflow.LoopWorkload:
      type: object
      properties:
        iterations:
          description: |-
            number of iterations in the loop
          type: integer
        children:
          description: |-
            list of workload items that are executed in this loop
          type: array
          items:
            $ref: "#/components/schemas/Dataflow.WorkloadItem"
