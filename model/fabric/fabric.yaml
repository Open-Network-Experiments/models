components:
  schemas:
    Fabric:
      type: object
      properties:
        choice:
          type: string
          enum: [clos]
        clos:
          $ref: "#/components/schemas/Fabric.Clos"
        qos_profiles:
          description: |-
            A list of Quality of Service (QoS) profiles
          type: array
          items:
            $ref: "#/components/schemas/Fabric.QosProfile"

    Fabric.Clos:
      description: |-
        An emulation of a multistage switch topology. When folded, results in a topology with (up to) 3 tiers identified as 
        spine, pod and tor tier.
      type: object
      properties:
        spine:
          $ref: "#/components/schemas/Fabric.Spine"
        pods:
          description: |-
            The pods in the topology.
          type: array
          items:
            $ref: "#/components/schemas/Fabric.Pod"
        host_links:
          type: array
          items:
            $ref: './link.yaml#/components/schemas/SwitchHostLink'
        pod_profiles:
          description: |-
            A list of pod profiles
          type: array
          items:
            $ref: "#/components/schemas/Fabric.PodProfile"
        tor_profiles:
          description: |-
            A list of ToR switch profiles
          type: array
          items:
            $ref: "#/components/schemas/Fabric.TorProfile"
        parallel_fabric_count:
          description: |-
            Number of parallel fabrics (aka fabric colors). Spine and pod switches 
            are fully meshed within a fabric
          type: integer
          default: 1
        annotations:
          type: string

    Fabric.Spine:
      type: object
      properties:
        count:
          description: |-
            The number of spines to be created with each spine sharing the same
            downlink_ecmp_mode and qos_profile_name properties.
          type: integer
          default: 1
        downlink_ecmp_mode:
          x-include:
            - "#/components/schemas/EcmpMode"
        qos_profile_name:
          description: |-
            The name of a qos profile shared by the spines.
          type: string
          x-constraint:
            - "#/components/schemas/QosProfile/properties/name"
        annotations:
          type: string

    Fabric.Pod:
      type: object
      properties:
        count:
          description: The number of pods that will share the same profile
          type: integer
          default: 1
        pod_profile_name:
          description: |-
            The pod profile associated with the pod(s).
          type: string
          x-constraint:
            - "#/components/schemas/PodProfile/properties/name"
        annotations:
          type: string

    Fabric.PodProfile:
      type: object
      properties:
        name:
          description: Uniquely identifies a pod profile
          type: string
        pod_switch:
          $ref: "#/components/schemas/Fabric.PodSwitch"
        tors:
          description: |-
              The ToRs in the pod
          type: array
          items:
            $ref: "#/components/schemas/Fabric.Tor"
        pod_to_spine_oversubscription: 
          description: Oversubscription ratio of the pod switches
          type: string
        annotations:
          type: string

    Fabric.PodSwitch:
      type: object
      properties:
        count:
          type: integer
          default: 1
        uplink_ecmp_mode:
          x-include:
            - "#/components/schemas/EcmpMode"
        downlink_ecmp_mode:
          x-include:
            - "#/components/schemas/EcmpMode"
        qos_profile_name:
          description: |-
            The name of a qos profile associated with the switches in this pod.
          type: string
          x-constraint:
            - "#/components/schemas/QosProfile/properties/name"
        annotations:
          type: string

    Fabric.Tor:
      type: object
      properties:
        count:
          type: integer
          description: number of ToR switches that will share the same profile
          default: 1
        tor_profile_name:
          description: |-
            The names of ToR profiles associated with the ToR switch(es)
          type: string
          x-constraint:
            - "#/components/schemas/TorProfile/properties/name"
        annotations:
          type: string

    Fabric.TorProfile:
      type: object
      properties:
        name:
          type: string
        tor_mode:
          x-include:
            - "#/components/schemas/TorMode"
        uplink_ecmp_mode:
          x-include:
            - "#/components/schemas/EcmpMode"
        qos_profile_name:
          description: |-
            The name of a qos profile associated with the ToR switch(es)
          type: string
          x-constraint:
            - "#/components/schemas/QosProfile/properties/name"
        tor_to_pod_oversubscription:
          $ref: "#/components/schemas/Fabric.TorProfile.Oversubscription"
        annotations:
          type: string

    Fabric.TorProfile.Oversubscription:
          description: |-
            The oversubscription of the ToR switch(es)
          type: object
          properties:
            ratio:
              type: string
            mode:
              type: string
              enum: [use_host_capacity, use_fabric_host_links]
              default: use_host_capacity
            host_capacity:
              type: integer
              default: 1

    EcmpMode:
      description: |-
        The algorithm for packet distribution over ECMP links.
        - random_spray randomly puts each packet on an ECMP member links 
        - hash_3_tuple is a 3 tuple hash of ipv4 src, dst, protocol
        - hash_5_tuple is static_hash_ipv4_l4 but a different resulting RTAG7 hash mode
      type: string
      enum: [random_spray, hash_3_tuple, hash_5_tuple]

    TorMode:
      description: ToR switch mode
      type: string
      enum: [layer2, layer3]

    Fabric.QosProfile:
      type: object
      required: [name]
      properties:
        name:
          type: string
        ingress_admission:
          $ref: "#/components/schemas/Fabric.QosProfile.IngressAdmission"
        scheduler:
          $ref: "#/components/schemas/Fabric.QosProfile.Scheduler"
        packet_classification:
          $ref: "#/components/schemas/Fabric.QosProfile.PacketClassification"
        wred:
          $ref: "#/components/schemas/Fabric.QosProfile.Wred"
        pfc:
          $ref: "#/components/schemas/Fabric.QosProfile.Pfc"
        annotations:
          type: string

    Fabric.QosProfile.IngressAdmission:
      type: object
      properties:
        reserved_buffer_bytes:
          description: Buffer space (in bytes) reserved for each port that this Qos profile applies to
          type: integer
          default: 0
        shared_buffer_bytes:
          description: Amount of shared buffer space (in bytes) available 
          type: integer
          default: 0
        priority_list:
          description: List of priorities for which the buffer sizes should be applied
          type: array
          items:
            type: integer
            default: 0

    Fabric.QosProfile.Scheduler:
      type: object
      properties:
        scheduler_mode:
          x-include:
            - "#/components/schemas/QosSchedulerMode"
        weight_list:
          description: A list of egress queue weights for weighted round robin scheduler mode
          type: array
          items:
            type: integer

    QosSchedulerMode:
      description: |-
        The queue scheduling discipline 
      type: string
      enum: [strict_priority, weighted_round_robin]

    Fabric.QosProfile.PacketClassification:
      type: object
      properties:
        map_dscp_to_traffic_class:
          type: array
          items:
            $ref: "#/components/schemas/Fabric.QosProfile.PacketClassification.DscpToTrafficClass"
        map_traffic_class_to_queue:
          type: array
          items:
            $ref: "#/components/schemas/Fabric.QosProfile.PacketClassification.TrafficClassToQueue"

    Fabric.QosProfile.PacketClassification.DscpToTrafficClass:
      type: object
      required: [dscp, traffic_class]
      properties:
        dscp: 
          type: integer
        traffic_class:
          type: integer

    Fabric.QosProfile.PacketClassification.TrafficClassToQueue:
      type: object
      required: [traffic_class, queue]
      properties:
        traffic_class: 
          type: integer
        queue:
          type: integer

    Fabric.QosProfile.Wred:
      description: |-
        WRED (weighted random early detection) configuration
      type: object
      properties:
        queue_list:
          description: List of queues for which WRED is enabled
          type: array
          items:
            type: integer
            default: 0
        ecn_marking_enabled:
          type: boolean
          default: false
        min_threshold_bytes:
          description: Egress queue threshold beyond which packets will be droppes or marked
          type: integer
          default: 1
        max_threshold_bytes:
          description: Egress queue threshold beyond which packets will be droppes or marked
          type: integer
          default: 2
        max_probability_percent:
          description: Probability of dropping/marking packets at max threshold
          type: integer
          default: 100

    Fabric.QosProfile.Pfc:
      description: |-
        PFC (Priority based flow control) configuration
      required: [lossless_priority_list, headroom_buffer_bytes, resume_threshold_bytes]
      type: object
      properties:
        enabled:
          type: boolean
          default: false
        lossless_priority_list:
          type: array
          items:
            type: integer
        headroom_buffer_bytes:
          description: Headroom buffer per PFC priority
          type: integer
        resume_threshold_bytes:
          description: Space required before sending Resume frame
          type: integer