openapi: 3.0.3

info:
  title: Distributed System Emulator Dataflow API and Data Models
  description: |-
    The Dataflow API and Data Models
  version: 0.0.1
  contact:
    x-info: |-
      Any feedback such as bugs/enhancements/questions regarding the 
      Dataflow API and Data models is welcomed by using the contact url.
    url: https://github.com/distributed-system-emulator/issues
  license:
    x-info: |-
      The license url will be used by OpenApiArt to add that content into 
      generated artifacts.
    name: MIT
    url: https://raw.githubusercontent.com/distributed-system-emulator/main/LICENSE

servers: 
  - url: /


paths: 
  /config:
    post:
      tags: ["Configuration"]
      operationId: set_config
      description: >-
        Sets the ONEx dataflow config
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./config.yaml#/components/schemas/Config"
      responses:
        '200':
          description: >-
            Current ONEx dataflow configuration
          content:
            application/json:
              schema:
                $ref: './config.yaml#/components/schemas/Config'
        x-include:
          - '../common/common.yaml#/components/responses/Error400'
          - '../common/common.yaml#/components/responses/Error500'

    get:
      tags: ["Configuration"]
      operationId: get_config
      description: >-
        Gets the ONEx dataflow config from the server, as currently configured
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetConfigDetails'
      responses:
        '200':
          description: >-
            Current ONEx dataflow configuration
          content:
            application/json:
              schema:
                $ref: './config.yaml#/components/schemas/Config'
        x-include:
        - '../common/common.yaml#/components/responses/Error400'
        - '../common/common.yaml#/components/responses/Error500'

  /control/experiment:
    post:
      tags:
      - Control
      operationId: run_experiment
      description: |-
        Runs the currently configured experiment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experiment.Request'
      responses:
        x-include:
        - '../common/common.yaml#/components/responses/Success'
        - '../common/common.yaml#/components/responses/Error400'
        - '../common/common.yaml#/components/responses/Error500'

  /results/metrics:
    description: >-
      Metrics API
    post:
      tags: ['Metrics']
      operationId: get_metrics
      requestBody:
        description: >-
          Request to obtain experiment metrics
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Metrics.Request'
      responses:
        '200':
          description: >-
            Experiment metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metrics.Response'
        x-include:
        - '../common/common.yaml#/components/responses/Error400'
        - '../common/common.yaml#/components/responses/Error500'

