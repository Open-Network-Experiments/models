components:
  responses: {}
  schemas:
    GlobalNamedObject:
      type: object
      properties:
        name:
          description: |-
            Unique identifier for an object
          type: string
          format: global-unique
    Error.Details:
      type: object
      properties:
        errors:
          type: array
          items:
            type: string
    Warning.Details:
      type: object
      properties:
        warnings:
          type: array
          items:
            type: string
    Config:
      description: "The resources that define a dataflow configuration. "
      type: object
      properties:
        hosts:
          type: array
          items:
            $ref: '#/components/schemas/Host'
        dataflow:
          $ref: '#/components/schemas/Dataflow'
    Host:
      required:
      - address
      - name
      properties:
        front_panel_port:
          description: |-
            The number of the port on the front panel
          type: integer
        name:
          description: |-
            The name, uniquely identifying the host
          type: string
        address:
          description: |-
            The test address of the host
          type: string
        prefix:
          description: |-
            The prefix of the host
          type: integer
          default: 24
    Dataflow:
      type: object
      properties:
        host_names:
          type: array
          items:
            type: string
          x-constraint:
          - '#/components/schemas/Host/properties/name'
          description: |
            TBD

            x-constraint:
            - #/components/schemas/Host/properties/name
        workload:
          description: |-
            The workload items making up the dataflow
          type: array
          items:
            $ref: '#/components/schemas/Dataflow.WorkloadItem'
        flow_profiles:
          description: |-
            foo
          type: array
          items:
            $ref: '#/components/schemas/Dataflow.FlowProfile'
    Dataflow.FlowProfile:
      type: object
      required:
      - name
      - data_size
      properties:
        name:
          type: string
        data_size:
          type: integer
        l2_protocol_choice:
          description: |-
            layer2 protocol selection
          type: string
          enum:
          - ethernet
        ethernet:
          $ref: '#/components/schemas/Dataflow.FlowProfile.Ethernet'
        l4_protocol_choice:
          description: |-
            layer4 protocol selection
          type: string
          enum:
          - tcp
          - udp
        tcp:
          $ref: '#/components/schemas/Dataflow.FlowProfile.Tcp'
        udp:
          $ref: '#/components/schemas/Dataflow.FlowProfile.Udp'
    Dataflow.FlowProfile.Ethernet:
      type: object
      properties:
        mtu:
          type: integer
          description: |-
            Maximum Transmission Unit
          default: 1500
    Dataflow.FlowProfile.Tcp:
      type: object
      properties:
        congestionAlgorithm:
          default: cubic
          description: |-
            The TCP congestion algorithm:
            bbr - Bottleneck Bandwidth and Round-trip propagation time
            dctcp - Data center TCP
            cubic - cubic window increase function
            reno - TCP New Reno
          type: string
          enum:
          - bbr
          - dctcp
          - cubic
          - reno
        initcwnd:
          description: |-
            initial congestion window
          type: integer
        sendBuf:
          description: |-
            send buffer size
          type: integer
        receiveBuf:
          description: |-
            receive buffer size
          type: integer
        destinationPort:
          $ref: '#/components/schemas/L4PortRange'
        sourcePort:
          $ref: '#/components/schemas/L4PortRange'
    L4PortRange:
      description: |-
        Layer4 protocol source or destination port values
      type: object
      properties:
        choice:
          description: |-
            None
          type: string
          enum:
          - single_value
          - range
        single_value:
          $ref: '#/components/schemas/L4PortRange.SingleValue'
        range:
          $ref: '#/components/schemas/L4PortRange.Range'
    L4PortRange.SingleValue:
      type: object
      properties:
        value:
          type: integer
          default: 1
    L4PortRange.Range:
      type: object
      properties:
        start_value:
          type: integer
          default: 1
        increment:
          type: integer
          default: 1
          minimum: 1
        count:
          type: integer
          default: 65535
          minimum: 1
          maximum: 65535
    Dataflow.FlowProfile.Udp:
      type: object
    Dataflow.WorkloadItem:
      type: object
      required:
      - name
      - choice
      properties:
        name:
          description: |-
            uniquely identifies the workload item
          type: string
        choice:
          description: |-
            The type of workflow item
          type: string
          enum:
          - scatter
          - gather
          - all_reduce
          - loop
          - compute
        scatter:
          $ref: '#/components/schemas/Dataflow.ScatterWorkload'
        gather:
          $ref: '#/components/schemas/Dataflow.GatherWorkload'
        loop:
          $ref: '#/components/schemas/Dataflow.LoopWorkload'
        compute:
          $ref: '#/components/schemas/Dataflow.ComputeWorkload'
        all_reduce:
          $ref: '#/components/schemas/Dataflow.AllReduceWorkload'
    Dataflow.ScatterWorkload:
      type: object
      properties:
        sources:
          description: |-
            list of host names, indicating the originator of the data
          type: array
          items:
            type: string
        destinations:
          description: |-
            list of host names, indicating the destination of the data
          type: array
          items:
            type: string
        flow_profile_name:
          description: |-
            flow profile reference
          type: string
    Dataflow.GatherWorkload:
      type: object
      properties:
        sources:
          description: |-
            list of host names, indicating the originator of the data
          type: array
          items:
            type: string
        destinations:
          description: |-
            list of host names, indicating the destination of the data
          type: array
          items:
            type: string
        flow_profile_name:
          description: |-
            flow profile reference
          type: string
    Dataflow.AllReduceWorkload:
      type: object
      properties:
        nodes:
          type: array
          items:
            type: string
        flow_profile_name:
          description: |-
            flow profile reference
          type: string
        type:
          description: |-
            type of all reduce
          type: string
          enum:
          - all_to_all
          - ring
          - butterfly
          - pipeline
          default: all_to_all
    Dataflow.ComputeWorkload:
      type: object
      properties:
        nodes:
          type: array
          items:
            type: string
        choice:
          description: |-
            type of compute
          type: string
          enum:
          - simulated
        simulated:
          $ref: '#/components/schemas/Dataflow.SimulatedComputeWorkload'
    Dataflow.SimulatedComputeWorkload:
      type: object
      properties:
        duration:
          description: |-
            duration of the simulated compute workload in seconds
          type: number
    Dataflow.LoopWorkload:
      type: object
      properties:
        iterations:
          description: |-
            number of iterations in the loop
          type: integer
        children:
          description: |-
            list of workload items that are executed in this loop
          type: array
          items:
            $ref: '#/components/schemas/Dataflow.WorkloadItem'
openapi: 3.0.3
info:
  title: Distributed System Emulator Dataflow API and Data Models
  description: |-
    The Dataflow API and Data Models
  version: 0.0.1
  contact:
    x-info: "Any feedback such as bugs/enhancements/questions regarding the \nDataflow\
      \ API and Data models is welcomed by using the contact url."
    url: https://github.com/distributed-system-emulator/issues
  license:
    x-info: "The license url will be used by OpenApiArt to add that content into \n\
      generated artifacts."
    name: MIT
    url: https://raw.githubusercontent.com/distributed-system-emulator/main/LICENSE
servers:
- url: /
paths:
  /config:
    post:
      tags:
      - Configuration
      operationId: set_config
      description: |-
        Sets dataflow configuration resources.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Config'
      responses:
        '400':
          description: |-
            error 4xx
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.Details'
        '500':
          description: |-
            error 5xx
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.Details'
        '200':
          description: |-
            Success with possible warnings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warning.Details'
    get:
      tags:
      - Configuration
      operationId: get_config
      description: |-
        Gets the current dataflow configuration.
      responses:
        '200':
          description: |-
            The current configured dataflow configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
