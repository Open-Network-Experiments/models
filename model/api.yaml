openapi: 3.0.3

info:
  title: ONEx Data Models
  description: |-
    The data models for the entire ONEx ecosystem
  version: 0.0.1
  contact:
    x-info: |-
      Any feedback such as bugs/enhancements/questions regarding the 
      ONEx data models is welcomed by using the contact url.
    url: https://github.com/onex/models/issues
  license:
    name: MIT

servers:
  - url: /

paths:
  /config:
    post:
      tags: ["Configuration"]
      operationId: set_config
      description: >-
        Sets the unified ONEx data model
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./config.yaml#/components/schemas/Config"
      responses:
        x-include:
          - "../common/common.yaml#/components/responses/Success"
          - '../common/common.yaml#/components/responses/Error400'
          - '../common/common.yaml#/components/responses/Error500'

    get:
      tags: ["Configuration"]
      operationId: get_config
      description: >-
        Gets the unified ONEx data model from the server, as currently configured
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Config.Request'
      responses:
        '200':
          description: >-
            Current ONEx configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config.Response'
        x-include:
        - '../common/common.yaml#/components/responses/Error400'
        - '../common/common.yaml#/components/responses/Error500'




  /control/experiment:
    post:
      tags:
      - Control
      operationId: run_experiment
      description: |-
        Runs the currently configured experiment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experiment.Request'
      responses:
        x-include:
        - '../common/common.yaml#/components/responses/Success'
        - '../common/common.yaml#/components/responses/Error400'
        - '../common/common.yaml#/components/responses/Error500'

  /results/metrics:
    description: >-
      Metrics API
    post:
      tags: ['Metrics']
      operationId: get_metrics
      requestBody:
        description: >-
          Request to obtain experiment metrics
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Metrics.Request'
      responses:
        '200':
          description: >-
            Experiment metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metrics.Response'
        x-include:
        - '../common/common.yaml#/components/responses/Error400'
        - '../common/common.yaml#/components/responses/Error500'



components:
  schemas:

    Config.Request:
      description: |-
        GetConfig request details
      type: object

    Config.Response:
      description: |-
        GetConfig response details
      type: object
      properties:
        config:
          $ref: "./config.yaml#/components/schemas/Config"


    Experiment.Request:
      description: |-
        Experiment request details
      type: object


    Metrics.Request:
      description: |-
        Metrics request details
      type: object

    Metrics.Response:
      description: |-
        Metrics response details
      type: object
      properties:
        jct:
          description: job completion time
          type: number
        flow_results:
          type: array
          items:
            $ref: '#/components/schemas/Metrics.Response.FlowResult'

    Metrics.Response.FlowResult:
      description: result for a single data flow
      properties:
        workload_name:
          type: string
        flow_number:
          type: integer
        from_host_name:
          type: string
        to_host_name:
          type: string
        fct:
          type: number
          description: flow completion time
        tcp_info:
          $ref: "#/components/schemas/Metrics.Response.FlowResult.TcpInfo"

    Metrics.Response.FlowResult.TcpInfo:
      type: object
      description: TCP information for this flow
      properties:
        rtt:
          type: number
          description: round trip time in microseconds
        rtt_variance:
          type: number
          description: round trip time variance in microseconds, larger values indicate less stable performance
        retransmissions:
          type: number
          description: total number of TCP retransmissions



