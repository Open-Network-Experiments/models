components:
  responses: {}
  schemas:
    GlobalNamedObject:
      type: object
      properties:
        name:
          description: |-
            Unique identifier for an object
          type: string
          format: global-unique
    Error.Details:
      type: object
      properties:
        errors:
          type: array
          items:
            type: string
    Warning.Details:
      type: object
      properties:
        warnings:
          type: array
          items:
            type: string
    Config:
      description: |-
        The resources that define a fabric configuration.
      type: object
      properties:
        name:
          type: string
        hosts:
          type: array
          items:
            $ref: '#/components/schemas/Host'
        qos_profiles:
          type: array
          items:
            $ref: '#/components/schemas/QosProfile'
        rack_profiles:
          type: array
          items:
            $ref: '#/components/schemas/RackProfile'
        pod_profiles:
          type: array
          items:
            $ref: '#/components/schemas/PodProfile'
        topology:
          $ref: '#/components/schemas/Topology'
    Topology:
      type: object
      required:
      - choice
      properties:
        choice:
          description: |-
            The type of topology to emulate.
          type: string
          enum:
          - spine_pod_rack
        spine_pod_rack:
          $ref: '#/components/schemas/SpinePodRack'
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/Annotations'
        name:
          description: |-
            Unique name of the emulated topology
          type: string
        description:
          description: |-
            A textual description of the emulated topology
          type: string
    RackProfile:
      type: object
      properties:
        name:
          type: string
        host_capacity:
          type: integer
          default: 1
        oversubscription:
          description: |-
            Rack to pod over subscription ratio
            Ratio of bandwidth in to bandwidth out
            links in X speed : links out X speed
            implementation will auto calculate the number of links based
            1:1 2:1
          type: string
          pattern: x:x regex
        tor_mode:
          description: |-
            The top of rack switch mode
            The switch mode connectivity.
            - layer2 hosts on the same switch only have layer2 connectivity
            - layer3 hosts on the same switch only have layer3 connectivity
          type: string
          enum:
          - layer2
          - layer3
        qos_profile_name:
          description: |
            The name of a qos profile associated with this top of rack profile.

            x-constraint:
            - #/components/schemas/QosProfile/properties/name
          type: string
          x-constraint:
          - '#/components/schemas/QosProfile/properties/name'
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/Annotations'
    Host:
      type: object
      required:
      - name
      - address
      properties:
        name:
          description: |-
            The unique name of the host
          type: string
        front_panel_port:
          description: |-
            The number of the port on the front panel
          type: integer
        address:
          description: |-
            The address of the host
          type: string
        prefix:
          description: |-
            The prefix of the host
          type: integer
          default: 24
        ingress:
          $ref: '#/components/schemas/Link'
        type:
          description: "The type of host.\n- external is a normal host/server that\
            \ is physically connnected to a front panel port \n- internal_traffic_sink\
            \ is a server that acts as a traffic sink where packets sent to its address\
            \ will be routed through the fabric"
          type: string
          enum:
          - external
          - internal_traffic_sink
          default: external
        layer1:
          $ref: '#/components/schemas/Layer1'
        annotations:
          description: |-
            A list of name/value annotations
          type: array
          items:
            $ref: '#/components/schemas/Annotations'
    Link:
      type: object
      description: "The ingress point of a host which is the index of a spine switch,\
        \ \na pod/rack switch."
      properties:
        choice:
          type: string
          enum:
          - spine
          - pod
          - rack
        spine:
          description: "One based index of the spine switch based on the number of\
            \ spines \nconfigured in the spine_pod_rack topology."
          type: integer
          minimum: 1
        pod:
          $ref: '#/components/schemas/PodRackLink'
        rack:
          $ref: '#/components/schemas/PodRackLink'
    PodRackLink:
      description: |-
        Location of the switch based on the number of pods and rack switches.
      type: object
      properties:
        pod_index:
          description: |-
            Index of the pod switch based on the number of pods and pod switches.
          type: integer
          minimum: 1
        switch_index:
          description: |-
            Index of the rack switch based on the number of pods and rack switches.
          type: integer
          minimum: 1
    Layer1:
      type: object
      properties:
        choice:
          type: string
          enum:
          - auto_negotiation
          - manual_negotiation
          default: auto_negotiation
        auto_negotiation:
          $ref: '#/components/schemas/AutoNegotiation'
        manual_negotiation:
          $ref: '#/components/schemas/ManualNegotiation'
    AutoNegotiation:
      type: object
      properties:
        advertise_fec:
          type: boolean
          default: true
    ManualNegotiation:
      type: object
      properties:
        fec_mode:
          type: string
          enum:
          - none
          - reed_solomon
    QosProfile:
      type: object
      properties:
        name:
          type: string
        dscp_to_traffic_class:
          description: |-
            A list of name/value key pairs
          type: array
          items:
            $ref: '#/components/schemas/Annotations'
    SpinePodRack:
      description: |-
        An emulation of a spine/pod/rack topology
      type: object
      properties:
        spines:
          description: |-
            The spines in the topology.
          type: array
          items:
            $ref: '#/components/schemas/Spine'
        pods:
          description: |-
            The pods in the topology.
          type: array
          items:
            $ref: '#/components/schemas/Pod'
        parallel_fabric_count:
          type: integer
          default: 1
    Spine:
      type: object
      properties:
        count:
          description: |-
            The number of spines to be created with each spine sharing the same
            downlink_ecmp_mode and qos_profile_name properties.
          type: integer
          default: 1
        downlink_ecmp_mode:
          description: "The algorithm for packet distribution over ECMP links.\n-\
            \ static_hash_ipv4_l4 is a 5 tuple hash of ipv4 src, dst, protocol and\
            \ tcp or udp src, dst port\n- random_spray randomly puts each packet on\
            \ an ECMP member links \n- hash_3_tuple is a 3 tuple hash of ipv4 src,\
            \ dst, protocol\n- hash_5_tuple is static_hash_ipv4_l4 but a different\
            \ resulting RTAG7 hash mode"
          type: string
          enum:
          - static_hash_ipv4_l4
          - random_spray
          - hash_3_tuple
          - hash_5_tuple
        qos_profile_name:
          description: |
            The name of a qos profile shared by the spines.

            x-constraint:
            - #/components/schemas/QosProfile/properties/name
          type: string
          x-constraint:
          - '#/components/schemas/QosProfile/properties/name'
    Pod:
      type: object
      properties:
        count:
          description: |-
            The number of pods that will share the same profile
          type: integer
          default: 1
        pod_profile_name:
          description: |-
            The pod profile associated with this pod.
          type: array
          items:
            type: string
            x-constraint:
            - '#/components/schemas/PodProfile/properties/name'
            description: |
              TBD

              x-constraint:
              - #/components/schemas/PodProfile/properties/name
    PodProfile:
      type: object
      properties:
        name:
          type: string
        pod_switch:
          $ref: '#/components/schemas/PodSwitch'
        rack:
          $ref: '#/components/schemas/PodRack'
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/Annotations'
    PodSwitch:
      type: object
      properties:
        count:
          type: integer
          default: 1
        uplink_ecmp_mode:
          description: "The algorithm for packet distribution over ECMP links.\n-\
            \ static_hash_ipv4_l4 is a 5 tuple hash of ipv4 src, dst, protocol and\
            \ tcp or udp src, dst port\n- random_spray randomly puts each packet on\
            \ an ECMP member links \n- hash_3_tuple is a 3 tuple hash of ipv4 src,\
            \ dst, protocol\n- hash_5_tuple is static_hash_ipv4_l4 but a different\
            \ resulting RTAG7 hash mode"
          type: string
          enum:
          - static_hash_ipv4_l4
          - random_spray
          - hash_3_tuple
          - hash_5_tuple
        downlink_ecmp_mode:
          description: "The algorithm for packet distribution over ECMP links.\n-\
            \ static_hash_ipv4_l4 is a 5 tuple hash of ipv4 src, dst, protocol and\
            \ tcp or udp src, dst port\n- random_spray randomly puts each packet on\
            \ an ECMP member links \n- hash_3_tuple is a 3 tuple hash of ipv4 src,\
            \ dst, protocol\n- hash_5_tuple is static_hash_ipv4_l4 but a different\
            \ resulting RTAG7 hash mode"
          type: string
          enum:
          - static_hash_ipv4_l4
          - random_spray
          - hash_3_tuple
          - hash_5_tuple
        qos_profile_name:
          description: |
            The name of a qos profile associated with this pod switch.

            x-constraint:
            - #/components/schemas/QosProfile/properties/name
          type: string
          x-constraint:
          - '#/components/schemas/QosProfile/properties/name'
    PodRack:
      type: object
      properties:
        rack_profile_names:
          description: |-
            The names of rack profiles associated with this rack.
          type: array
          items:
            type: string
            x-constraint:
            - '#/components/schemas/RackProfile/properties/name'
            description: |
              TBD

              x-constraint:
              - #/components/schemas/RackProfile/properties/name
    Annotations:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
openapi: 3.0.3
info:
  title: Distributed System Emulator Fabric API and Data Models
  description: |-
    The Fabric API and Data Models
  version: 0.0.1
  contact:
    x-info: "Any feedback such as bugs/enhancements/questions regarding the \nFabric\
      \ API and Data models is welcomed by using the contact url."
    url: https://github.com/distributed-system-emulator/issues
  license:
    x-info: "The license url will be used by OpenApiArt to add that content into \n\
      generated artifacts."
    name: MIT
    url: https://raw.githubusercontent.com/distributed-system-emulator/main/LICENSE
servers:
- url: /
paths:
  /config:
    post:
      tags:
      - Configuration
      operationId: set_config
      description: |-
        Sets the fabric configuration.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Config'
      responses:
        '400':
          description: |-
            error 4xx
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.Details'
        '500':
          description: |-
            error 5xx
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.Details'
        '200':
          description: |-
            Success with possible warnings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warning.Details'
    get:
      tags:
      - Configuration
      operationId: get_config
      description: |-
        Gets the fabric configuration.
      responses:
        '200':
          description: |-
            The current configured fabric configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
